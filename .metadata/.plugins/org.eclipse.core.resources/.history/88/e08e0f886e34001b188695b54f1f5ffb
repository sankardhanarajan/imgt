package com.db1.incident.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.db1.incident.model.D_Application_Health;
import com.db1.incident.payload.ApiResponse;
import com.db1.incident.payload.AppResponse;
import com.db1.incident.payload.CauseResponse;
import com.db1.incident.payload.OutageRequest;
import com.db1.incident.payload.PagedResponse;
import com.db1.incident.repository.AppRepository;
import com.db1.incident.repository.UserRepository;
import com.db1.incident.security.CurrentUser;
import com.db1.incident.security.UserPrincipal;
import com.db1.incident.service.AppService;

import javax.validation.Valid;
import java.net.URI;
import java.util.List;

@RestController
@RequestMapping("/api")
public class AppController {

	 @Autowired
	 private AppService appService;
    
    @GetMapping("/apps")
    public PagedResponse<AppResponse> getapps(@CurrentUser UserPrincipal currentUser) {
    	return appService.getAllApplications();
    }
    
    @GetMapping("/causes")
    public PagedResponse<CauseResponse> getCauses(@CurrentUser UserPrincipal currentUser) {
    	return appService.getCauses();
    }
    
    @PostMapping("/outage")
    @PreAuthorize("hasRole('USER')")
    public ResponseEntity<?> createOutage(@RequestBody OutageRequest outRequest, @CurrentUser UserPrincipal currentUser) {
        appService.createOutage(outRequest, currentUser.getId());
        return ResponseEntity.ok()
                .body(new ApiResponse(true, "Outage Created Successfully"));
    }   
}
